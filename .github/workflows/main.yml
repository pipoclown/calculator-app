name: CI Build and Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  IMAGE_NAME: spiraltraindocker/calculator-app

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests
        
      - name: Start Spring Boot app
        run: nohup java -jar target/calculator-app.jar &

      - name: Wait for app to start
        run: |
          echo "Waiting for http://localhost:8080 to become available..."
          for i in {1..30}; do
            if curl --output /dev/null --silent --head --fail http://localhost:8080; then
              echo "App is up!"
              break
            fi
            echo "Waiting ($i)..."
            sleep 2
          done

      - name: Run Selenium tests (headless)
        run: mvn surefire-report:report

      - name: Upload Surefire HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: surefire-report
          path: target/site/surefire-report.html

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Deploy Green Company
        run: docker compose -f docker-compose-green.yml up -d

      - name: Deploy Red Company
        run: docker compose -f docker-compose-red.yml up -d

      - name: Deploy Blue Company
        run: docker compose -f docker-compose-blue.yml up -d
